// plugins/gay.js
const handler = async (msg, { conn }) => {
  const chatId = msg.key.remoteJid;

  const textRaw = (
    msg.message?.conversation ||
    msg.message?.extendedTextMessage?.text ||
    ''
  ).trim();

  const match = textRaw.match(/^[!./#]?\s*([a-zA-Z]+)/);
  const comando = match ? match[1].toLowerCase() : null;

  if (comando !== 'gay') return;

  let mentionedJid = null;
  try {
    if (msg.message?.extendedTextMessage?.contextInfo?.mentionedJid?.length) {
      mentionedJid = msg.message.extendedTextMessage.contextInfo.mentionedJid[0];
    } else if (msg.message?.contextInfo?.mentionedJid?.length) {
      mentionedJid = msg.message.contextInfo.mentionedJid[0];
    } else if (msg.message?.extendedTextMessage?.contextInfo?.participant) {
      mentionedJid = msg.message.extendedTextMessage.contextInfo.participant;
    } else if (msg.message?.contextInfo?.participant) {
      mentionedJid = msg.message.contextInfo.participant;
    }
  } catch {
    mentionedJid = null;
  }

  if (!mentionedJid) {
    return await conn.sendMessage(chatId, {
      text: `‚ùó *Uso incorrecto del comando.*\n\nDebes *etiquetar* a alguien o *responder su mensaje* para escanear.\n\n*Ejemplos v√°lidos:*\n> .gay @usuario\n> .gay (respondiendo al mensaje de alguien)`,
    }, { quoted: msg });
  }

  const numero = mentionedJid.split('@')[0];

  // Si escanean al owner, respuesta especial
  const frasesOwner = [
    'üåà @{user} es el arco√≠ris original. Nivel: Divino.',
    'üëë No puedes medir la gaydad del creador, @{user} dicta la escala.',
    'üö´ Escaneo fallido. @{user} es inmedible.',
    'üîí El universo protege la energ√≠a de @{user}.',
    '‚ö†Ô∏è Resultados prohibidos para @{user}.'
  ];

  const isTaggedOwner = Array.isArray(global.owner) && global.owner.some(([id]) => id === numero);
  if (isTaggedOwner) {
    const frase = frasesOwner[Math.floor(Math.random() * frasesOwner.length)].replace('{user}', numero);
    return await conn.sendMessage(chatId, {
      text: frase,
      mentions: [mentionedJid]
    }, { quoted: msg });
  }

  // Frases para el remate
  const frasesGay = [
    'êÄî Brillas m√°s que el arco√≠ris.',
    'êÄî Tu closet se qued√≥ sin candado.',
    'êÄî RuPaul estar√≠a orgulloso.',
    'êÄî Nadie usa mejor el glitter que t√∫.',
    'êÄî El Pride se queda corto contigo.',
    'êÄî Tu bandera ondea en cada paso.'
  ];

  const cierres = [
    '‚û¢ Escaneo avalado por la comunidad üåà.',
    '‚û¢ Certificado por los dioses del glitter.',
    '‚û¢ Validaci√≥n oficial de la rainbow crew.',
    '‚û¢ Registro eterno en los archivos LGBT.',
    '‚û¢ Informe aprobado por el comit√© Pride.'
  ];

  const remate = frasesGay[Math.floor(Math.random() * frasesGay.length)];
  const cierre = cierres[Math.floor(Math.random() * cierres.length)];
  const porcentaje = Math.floor(Math.random() * 101);

  const textoFinal = `üåà *AN√ÅLISIS COMPLETO DEL ESC√ÅNER GAY*\n\n*üì° RESULTADO:* @${numero} *es* „Äé ${porcentaje}% „Äè GAY üåê\n\n> ${remate}\n\n${cierre}`;

  await conn.sendMessage(chatId, {
    text: textoFinal,
    mentions: [mentionedJid]
  }, { quoted: msg });
};

handler.command = ['gay'];
handler.tags = ['diversi√≥n'];
handler.help = ['gay @usuario o responde'];
handler.group = true;
handler.register = true;

module.exports = handler;